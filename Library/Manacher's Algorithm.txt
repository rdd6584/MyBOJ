// 가장 긴 팰린드롬 부분 문자열의 길이 찾기.
char t[100001];
char s[200002];
int a[200002];

int main() {
	scanf("%s", t);
	int len = strlen(t);
	int r = 0, p = 0, mv = 0;

	s[1] = t[0];
	for (int i = 1; i < len; i++) {
		s[i * 2] = '#';
		s[i * 2 + 1] = t[i];
	}
	s[0] = s[len * 2] = '#';
	len = strlen(s);
    
	for (int i = 1; i < len; i++) {
		if (i <= r) a[i] = min(r - i, a[2 * p - i]);
		while (i - a[i] - 1 >= 0 && i + a[i] + 1 < len && s[i - a[i] - 1] == s[i + a[i] + 1]) a[i]++;
		if (r < i + a[i]) { r = i + a[i]; p = i; }
		mv = max(mv, a[i]);
	}

	printf("%d", mv);
}